{"version":3,"sources":["circleVariableToGitlabVariables.jsx","exampleData.js","App.js","reportWebVitals.js","index.js"],"names":["ErrorApp","message","this","Variable","key","value","error","undefined","CircleVariableToGitlabVariables","useState","circleCiSettings","SetCircleCiSettings","gitlabVariables","SetGitlabVariables","hasProblem","circleCiYamlStatus","SetCircleCiYamlStatus","useEffect","result","text","doc","js_yaml","load","e","yamlData","job","Object","keys","jobs","reduce","acc","current","hasOwnProperty","docker","environment","obj","entries","map","arrayList","entry","toString","toLowerCase","replace","dbVariables","dbInfo","includes","toUpperCase","POSTGRES_USER","POSTGRES_PASSWORD","POSTGRES_DB","Number","isNaN","isInteger","push","variablesToRemove","filter","currentValue","accumulator","func","className","role","class","for","id","onChange","event","target","rows","length","type","style","onClick","textToClipboard","copy","overflow","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAKMA,EACJ,WAAYC,GAAU,oBACpBC,KAAKD,QAAUA,GAGbE,EACJ,WAAYC,EAAKC,GAAQ,oBACvBH,KAAKE,IAAMA,EACXF,KAAKG,MAAQA,EACbH,KAAKI,WAAQC,GA8NFC,EA1NyB,WAAO,IAAD,EACIC,mBCnB5B,uUDkBwB,mBACrCC,EADqC,KACnBC,EADmB,OAEEF,mBAAS,IAFX,mBAErCG,EAFqC,KAEpBC,EAFoB,OAGQJ,mBAAS,CAC3DK,YAAY,EACZb,aAASM,IALiC,mBAGrCQ,EAHqC,KAGjBC,EAHiB,KAyK5C,OAtJAC,qBAAU,WACR,IA8HMC,EAZY,CAlHD,SAACC,GAChB,IACE,IAAMC,EAAMC,IAAQC,KAAKH,GAKzB,OAJAH,EAAsB,CACpBF,YAAY,EACZb,aAASM,IAEJa,EACP,MAAOG,GAKP,OAJAP,EAAsB,CACpBF,YAAY,EACZb,QAAS,sBAEJ,KAIsB,SAACuB,GAChC,IACE,IAAMC,EAAMC,OAAOC,KAAKH,EAASI,MAAMC,QAAO,SAACC,EAAKC,GAClD,OAAGP,EAASI,KAAKG,GAASC,eAAe,UAChCD,EAEFD,IACNN,EAASI,MAQZ,OANAZ,EAAsB,CACpBF,YAAY,EACZb,aAASM,IAEEiB,EAASI,KAAKH,GAAKQ,OAEpBJ,QAAO,SAACC,EAAKC,GACvB,OAAO,2BAAKD,GAAQC,EAAQG,eAC3B,IACH,SAKA,OAJAlB,EAAsB,CACpBF,YAAY,EACZb,QAAS,yBAEJ,KAIa,SAACkC,GACvB,OAAOT,OAAOU,QAAQD,GAAKE,KAAI,YAAmB,IAAD,mBAAhBjC,EAAgB,KAAXC,EAAW,KAC/C,OAAO,IAAIF,EAASC,EAAKC,OAIJ,SAACiC,GACxB,OAAOA,EAAUD,KAAI,SAACE,GAQpB,MAP2B,mBAAhBA,EAAMlC,QACfkC,EAAMlC,MAAQkC,EAAMlC,MACjBmC,WACAC,cACAC,QAAQ,QAAS,WACjBA,QAAQ,OAAQ,WAEdH,MAIY,SAACD,GACtB,IAAMK,EAAc,CAClB,gBACA,cACA,qBAEIC,EAASN,EAAUT,QAAO,SAACC,EAAKC,GAIpC,OAHIY,EAAYE,SAASd,EAAQ3B,OAC/B0B,EAAIC,EAAQ3B,KAAO2B,EAAQ1B,OAEtByB,IACNQ,GAEH,OAAOA,EAAUD,KAAI,SAACE,GAIpB,OAHIA,EAAMnC,IAAI0C,cAAcD,SAAS,kBACnCN,EAAMlC,MAAN,qBAA4BuC,EAAOG,cAAnC,YAAoDH,EAAOI,kBAA3D,0BAA8FJ,EAAOK,cAEhGV,MAIY,SAACD,GACtB,OAAOA,EAAUD,KAAI,SAACE,GACpB,IAAMlC,EAAQ6C,OAAOX,EAAMlC,OAI3B,OAHK6C,OAAOC,MAAM9C,IAAW6C,OAAOE,UAAU/C,KAC5CkC,EAAMlC,MAAN,WAAkBkC,EAAMlC,MAAMmC,WAA9B,MAEKD,MAIY,SAACD,GACtB,OAAOA,EAAUD,KAAI,SAACE,GAIpB,OAHoB,OAAhBA,EAAMlC,QACRkC,EAAMjC,MAAQ,IAAIN,EAAS,gCAEtBuC,MAIe,SAACD,GAGzB,OAFAA,EAAUe,KAAK,IAAIlD,EAAS,sBAAuB,YAE5CmC,GAGe,SAACA,GACvB,IAAMgB,EAAoB,CAAC,kBAC3B,OAAOhB,EAAUiB,QAAO,SAAAC,GAAY,OAAKF,EAAkBT,SAASW,EAAapD,UAe1DyB,QAAO,SAAC4B,EAAaC,GAC5C,OAAOA,EAAKD,KACX/C,GAEHG,EAAmBK,KAClB,CAACR,IAmBF,sBAAKiD,UAAU,MAAf,UACE,sBAAKA,UAAU,MAAf,UACG5C,EAAmBD,WAClB,mBAAG6C,UAAU,qBAAqBC,KAAK,QAAvC,SACG7C,EAAmBd,UAGtB,GAEF,sBAAK4D,MAAM,OAAX,UACE,uBAAOC,IAAI,YAAYD,MAAM,aAA7B,gCAGA,0BACEF,UAAU,eACVI,GAAG,mBACH1D,MAAOK,EACPsD,SApLV,SAAgCC,GAC9BtD,EAAoBsD,EAAMC,OAAO7D,QAoLzB8D,KAAK,aAIVvD,EAAgBwD,OAAS,GACxB,qBAAKT,UAAU,MAAf,SACE,sBAAKA,UAAU,OAAf,UACE,uBAAOA,UAAU,aAAjB,8BACA,yBACEU,KAAK,SACLV,UAAU,0BACVW,MAAO,CAAE,cAAe,QACxBC,QA7LZ,WACE,IAAMC,EAAkB5D,EAAgBiB,QAAO,SAACC,EAAK0B,GAEnD,OADA1B,GAAG,UAAO0B,EAAapD,IAApB,aAA4BoD,EAAanD,MAAzC,QAEF,IACHoE,IAAKD,IAoLG,UAME,mBAAGb,UAAU,aAAaW,MAAO,CAAE,gBAAiB,SANtD,UASA,oBACEX,UAAU,aACVW,MAAO,CAAE,aAAc,OAAQI,SAAU,UAF3C,SAnDS9D,EAAgByB,KAAI,SAACE,GACpC,IAAIoB,EAAY,kBAIhB,OAHIpB,EAAMjC,QACRqD,GAAa,2BAGb,qBAAIA,UAAWA,EAAf,UACGpB,EAAMnC,IADT,KACgBmC,EAAMlC,MAAO,IAC1BkC,EAAMjC,MAAQ,IAAMiC,EAAMjC,MAAML,QAAU,IAAM,oBExK5C0E,MARf,WACE,OACE,qBAAKhB,UAAU,kBAAf,SACE,cAAC,EAAD,OCKSiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2f2ad43a.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport js_yaml from \"js-yaml\";\nimport copy from \"copy-to-clipboard\";\nimport { variables as variablesExample } from \"./exampleData\";\n\nclass ErrorApp {\n  constructor(message) {\n    this.message = message;\n  }\n}\nclass Variable {\n  constructor(key, value) {\n    this.key = key;\n    this.value = value;\n    this.error = undefined;\n  }\n}\n\nconst CircleVariableToGitlabVariables = () => {\n  const [circleCiSettings, SetCircleCiSettings] = useState(variablesExample);\n  const [gitlabVariables, SetGitlabVariables] = useState([]);\n  const [circleCiYamlStatus, SetCircleCiYamlStatus] = useState({\n    hasProblem: false,\n    message: undefined,\n  });\n  function circleCiSettingsChange(event) {\n    SetCircleCiSettings(event.target.value);\n  }\n\n  function onClickCopy() {\n    const textToClipboard = gitlabVariables.reduce((acc, currentValue) => {\n      acc += `${currentValue.key}: ${currentValue.value}\\n`;\n      return acc;\n    }, \"\");\n    copy(textToClipboard);\n  }\n\n  useEffect(() => {\n    const readYaml = (text) => {\n      try {\n        const doc = js_yaml.load(text);\n        SetCircleCiYamlStatus({\n          hasProblem: false,\n          message: undefined,\n        });\n        return doc;\n      } catch (e) {\n        SetCircleCiYamlStatus({\n          hasProblem: true,\n          message: \"Invalid Yaml Data\",\n        });\n        return {};\n      }\n    };\n\n    const searchEnvironmentEntries = (yamlData) => {\n      try {\n        const job = Object.keys(yamlData.jobs).reduce((acc, current) => {\n          if(yamlData.jobs[current].hasOwnProperty(\"docker\")){\n            return current\n          }\n          return acc\n        }, yamlData.jobs);\n\n        SetCircleCiYamlStatus({\n          hasProblem: false,\n          message: undefined,\n        });\n        const data = yamlData.jobs[job].docker;\n\n        return data.reduce((acc, current) => {\n          return { ...acc, ...current.environment };\n        }, {});\n      } catch {\n        SetCircleCiYamlStatus({\n          hasProblem: true,\n          message: \"Yaml Data is invalid\",\n        });\n        return {};\n      }\n    };\n\n    const createVariables = (obj) => {\n      return Object.entries(obj).map(([key, value]) => {\n        return new Variable(key, value);\n      });\n    };\n\n    const fixBooleanValues = (arrayList) => {\n      return arrayList.map((entry) => {\n        if (typeof entry.value === \"boolean\") {\n          entry.value = entry.value\n            .toString()\n            .toLowerCase()\n            .replace(\"false\", '\"False\"')\n            .replace(\"true\", '\"True\"');\n        }\n        return entry;\n      });\n    };\n\n    const fixDatabaseUrl = (arrayList) => {\n      const dbVariables = [\n        \"POSTGRES_USER\", \n        \"POSTGRES_DB\",\n        \"POSTGRES_PASSWORD\"]\n\n      const dbInfo = arrayList.reduce((acc, current) => {\n        if (dbVariables.includes(current.key)){\n          acc[current.key] = current.value;\n        }\n        return acc;\n      }, arrayList);\n\n      return arrayList.map((entry) => {\n        if (entry.key.toUpperCase().includes(\"DATABASE_URL\")) {\n          entry.value = `postgres://${dbInfo.POSTGRES_USER}:${dbInfo.POSTGRES_PASSWORD}@postgres:5432/${dbInfo.POSTGRES_DB}`;\n        }\n        return entry;\n      });\n    };\n\n    const fixFloatValues = (arrayList) => {\n      return arrayList.map((entry) => {\n        const value = Number(entry.value)\n        if (!Number.isNaN(value) && !Number.isInteger(value)){\n          entry.value = `\"${entry.value.toString()}\"`\n        }\n        return entry;\n      });\n    }\n\n    const checkNullValue = (arrayList) => {\n      return arrayList.map((entry) => {\n        if (entry.value === null) {\n          entry.error = new ErrorApp(\"This field is missing value\");\n        }\n        return entry;\n      });\n    };\n\n    const addExtraVariables = (arrayList) => {\n      arrayList.push(new Variable(\"SECURE_SSL_REDIRECT\", '\"False\"'));\n\n      return arrayList;\n    };\n\n    const removeVariables = (arrayList) => {\n      const variablesToRemove = [\"HTTPS_REQUIRED\"];\n      return arrayList.filter(currentValue => !variablesToRemove.includes(currentValue.key));\n    }\n\n    const functions = [\n      readYaml,\n      searchEnvironmentEntries,\n      createVariables,\n      fixBooleanValues,\n      fixDatabaseUrl,\n      fixFloatValues,\n      checkNullValue,\n      addExtraVariables,\n      removeVariables\n    ];\n\n    const result = functions.reduce((accumulator, func) => {\n      return func(accumulator);\n    }, circleCiSettings);\n\n    SetGitlabVariables(result);\n  }, [circleCiSettings]);\n\n  function createHtmlList() {\n    const htmlList = gitlabVariables.map((entry) => {\n      let className = \"list-group-item\";\n      if (entry.error) {\n        className += \" list-group-item-danger\";\n      }\n      return (\n        <li className={className}>\n          {entry.key}: {entry.value}{\" \"}\n          {entry.error ? \"(\" + entry.error.message + \")\" : \"\"}\n        </li>\n      );\n    });\n    return htmlList;\n  }\n\n  return (\n    <div className=\"row\">\n      <div className=\"col\">\n        {circleCiYamlStatus.hasProblem ? (\n          <p className=\"alert alert-danger\" role=\"alert\">\n            {circleCiYamlStatus.message}\n          </p>\n        ) : (\n          \"\"\n        )}\n        <div class=\"mb-3\">\n          <label for=\"variables\" class=\"form-label\">\n            Circle Ci Settings\n          </label>\n          <textarea\n            className=\"form-control\"\n            id=\"circleCiSettings\"\n            value={circleCiSettings}\n            onChange={circleCiSettingsChange}\n            rows=\"20\"\n          ></textarea>\n        </div>\n      </div>\n      {gitlabVariables.length > 0 && (\n        <div className=\"col\">\n          <div className=\"mb-3\">\n            <label className=\"form-label\">Variables Gitlab</label>\n            <button\n              type=\"button\"\n              className=\"btn btn-outline-primary\"\n              style={{ \"margin-left\": \"10px\" }}\n              onClick={onClickCopy}\n            >\n              <i className=\"fa fa-copy\" style={{ \"padding-right\": \"5px\" }}></i>\n              Copy\n            </button>\n            <ul\n              className=\"list-group\"\n              style={{ \"max-height\": \"90vh\", overflow: \"scroll\" }}\n            >\n              {createHtmlList()}\n            </ul>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CircleVariableToGitlabVariables;\n","export const variables = `\njobs:\n  build:\n    docker:\n      - image: circleci/python:3.9.0-buster\n        environment:\n            DEBUG: True\n            DEBUG1: true\n            LOG_LEVEL: DEBUG\n            PROJECT_DOMAIN: localhost:8000\n            SECRET_KEY: \n            DATABASE_URL: postgres://ubuntu:@localhost:5432/circle_test\n`;\n","import \"./App.css\";\n\nimport CircleVariableToGitlabVariables from \"./circleVariableToGitlabVariables\";\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <CircleVariableToGitlabVariables />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}